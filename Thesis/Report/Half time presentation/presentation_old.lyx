#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass beamer
\begin_preamble
\usetheme{Warsaw}
% or ...

\setbeamercovered{transparent}
% or whatever (possibly just delete it)
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 0
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
This file is a solution template for:
\end_layout

\begin_layout Itemize
Talk at a conference/colloquium.
 
\end_layout

\begin_layout Itemize
Talk length is about 20min.
 
\end_layout

\begin_layout Itemize
Style is ornate.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Copyright 2004 by Till Tantau <tantau@users.sourceforge.net>.
 
\end_layout

\begin_layout Plain Layout
In principle, this file can be redistributed and/or modified under the terms
 of the GNU Public License, version 2.
 However, this file is supposed to be a template to be modified for your
 own needs.
 For this reason, if you use this file as a template and not specifically
 distribute it as part of a another package/program, the author grants the
 extra permission to freely copy and modify this file as you see fit and
 even to delete this copyright notice.
 
\end_layout

\end_inset


\end_layout

\begin_layout Title
Query generation from natural languages
\end_layout

\begin_layout Author
Martin
\begin_inset space ~
\end_inset

Agfjord
\end_layout

\begin_layout Institute
Department of Computer Science and Engineering
\begin_inset Newline newline
\end_inset

University of Gothenburg
\end_layout

\begin_layout Date
Half time presentation
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
If you have a file called "institution-logo-filename.xxx", where xxx is a
 graphic format that can be processed by latex or pdflatex, resp., then you
 can add a logo by uncommenting the following:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
pgfdeclareimage[height=0.5cm]{institution-logo}{gu.jpg}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%
\backslash
logo{
\backslash
pgfuseimage{institution-logo}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSubsection[]{
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}   
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection,currentsubsection] 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you wish to uncover everything in a step-wise fashion, uncomment the
 following command:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
beamerdefaultoverlayspecification{<+->}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Outline
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Structuring a talk is a difficult task and the following structure may not
 be suitable.
 Here are some rules that apply for this solution: 
\end_layout

\begin_layout Itemize
Exactly two or three sections (other than the summary).
 
\end_layout

\begin_layout Itemize
At *most* three subsections per section.
 
\end_layout

\begin_layout Itemize
Talk about 30s to 2min per frame.
 So there should be between about 15 and 30 frames, all told.
\end_layout

\begin_layout Itemize
A conference audience is likely to know very little of what you are going
 to talk about.
 So *simplify*! 
\end_layout

\begin_layout Itemize
In a 20min talk, getting the main ideas across is hard enough.
 Leave out details, even if it means being less precise than you think necessary.
 
\end_layout

\begin_layout Itemize
If you omit details that are vital to the proof/implementation, just say
 so once.
 Everybody will be happy with that.
 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Section
The problem
\end_layout

\begin_layout Subsection
How can a computer understand a natural language?
\begin_inset Argument 2
status collapsed

\begin_layout Plain Layout
Basic Problem
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Understanding Natural Languages
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
A title should summarize the slide in an understandable fashion for anyone
 how does not follow everything on the slide itself.
 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
We use grammars to translate languages
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Want to translate natural language into a language the computer can understand
\end_layout

\end_inset


\end_layout

\begin_layout Pause

\end_layout

\begin_layout Itemize
A grammar is a set of structured rules for strings
\end_layout

\begin_layout Pause

\end_layout

\begin_layout Itemize
Grammars has been used by compilers for a long time
\end_layout

\begin_layout Pause

\end_layout

\begin_layout Block
\begin_inset Argument 2
status open

\begin_layout Plain Layout
So how can we build a grammar to translate languages?
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Block
We will use Grammatical Framework (GF)
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Introducing Grammatical Framework (GF)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
GF is a development platform for natural language grammars
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
A GF grammar can translate between many languages
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
GF separates the grammar between 
\emph on
abstract
\emph default
 and 
\emph on
concrete 
\emph default
syntax
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
An abstract syntax is a tree which captures the semantic structure
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
A concrete syntax represent how an abstract syntax looks like a string
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Block
\begin_inset Argument 2
status open

\begin_layout Plain Layout
The same technique is used by compilers
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\begin_layout Itemize
Programmer writes source code in concrete syntax
\end_layout

\begin_layout Itemize
Compiler translates concrete syntax to abstract syntax
\end_layout

\begin_layout Itemize
The rest of the compiler manipulates the trees
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Development of a grammar in GF
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Abstract syntax
\end_layout

\begin_layout LyX-Code
  +
\end_layout

\begin_layout LyX-Code
 / 
\backslash

\end_layout

\begin_layout LyX-Code
1   2
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Standard
Concrete syntaxes
\end_layout

\begin_layout LyX-Code
1 + 2                 -- Java, C, ...
\end_layout

\begin_layout LyX-Code
(+ 1 2)               -- Lisp, Scheme, ...
\end_layout

\begin_layout LyX-Code
the sum of 1 and 2    -- English
\end_layout

\begin_layout LyX-Code
la somme de 2 et de 3 -- French
\end_layout

\begin_layout Itemize
All concrete syntaxes are string representations of the abstract syntax
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
How do we create a grammar to translate between these languages?
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Development of a grammar in GF, cont'd
\end_layout

\end_inset


\end_layout

\begin_layout Frame

\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\begin_layout Example

\end_layout

\begin_deeper
\begin_layout Itemize
People who know Java and Solr or Sharepoint
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
People who know Java and (Solr or Sharepoint)
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
People who know (Java and Solr) or Sharepoint
\end_layout

\end_deeper
\begin_layout Itemize
Makes it harder for a computer to understand the sentence
\begin_inset Note Note
status open

\begin_layout Plain Layout
understand the contextual meaning of the sentence
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Grammatical framework (GF)
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Grammatical framework (GF)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Programming language specialised for multilingual grammars
\begin_inset Note Note
status open

\begin_layout Plain Layout
explain what a multilingual grammar is
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Section
Current status
\end_layout

\begin_layout Subsection
Main Results
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Make Titles Informative.
 
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Theorem
On first slide.
\end_layout

\begin_layout Pause

\end_layout

\begin_layout Corollary
On second slide.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Make Titles Informative.
 
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout ColumnsTopAligned

\end_layout

\begin_deeper
\begin_layout Column
5cm
\end_layout

\begin_layout Theorem
\begin_inset Argument 1
status collapsed

\begin_layout Plain Layout
1-
\end_layout

\end_inset

In left column.
\end_layout

\begin_layout Column
5cm
\end_layout

\begin_layout Corollary
\begin_inset Argument 1
status collapsed

\begin_layout Plain Layout
2-
\end_layout

\end_inset

In right column.
\begin_inset Newline newline
\end_inset

New line
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
Basic Ideas for Proofs/Implementations
\end_layout

\begin_layout Section*
Summary
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Summary
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The
\color none
 
\color red
first main message
\color none
 of your talk in one or two lines.
\end_layout

\begin_layout Itemize
The
\color none
 
\color red
second main message
\color none
 of your talk in one or two lines.
\end_layout

\begin_layout Itemize
Perhaps a
\color none
 
\color red
third message
\color none
, but not more than that.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
An outlook is always optional.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
vskip0pt plus.5fill
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Outlook
\end_layout

\begin_deeper
\begin_layout Itemize
What we have not done yet.
\end_layout

\begin_layout Itemize
Even more stuff.
\end_layout

\end_deeper
\end_deeper
\begin_layout Section*
\start_of_appendix
\begin_inset Note Note
status open

\begin_layout Plain Layout
All of the following is optional and typically not needed.
\end_layout

\end_inset

Appendix
\end_layout

\begin_layout Subsection*
For Further Reading
\end_layout

\begin_layout Frame
\begin_inset Argument 3
status collapsed

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
For Further Reading
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
beamertemplatebookbibitems
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Start with overview books.
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Author1990"

\end_inset

A.
 Author.
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
newblock
\end_layout

\end_inset


\emph on
Handbook of Everything
\emph default
.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
newblock
\end_layout

\end_inset

 Some Press, 1990.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
beamertemplatearticlebibitems
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Followed by interesting articles.
 Keep the list short.
 
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Someone2002"

\end_inset

S.
 Someone.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
newblock
\end_layout

\end_inset

 On this and that
\emph on
.

\emph default
 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
newblock
\end_layout

\end_inset


\emph on
Journal on This and That
\emph default
.
 2(1):50--100, 2000.
\end_layout

\end_deeper
\end_body
\end_document
